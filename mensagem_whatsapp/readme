Aqui estÃ¡ um README completo, pronto para vocÃª colocar na pÃ¡gina inicial do seu repositÃ³rio no GitHub:

---

# ðŸ“² AutomaÃ§Ã£o de Envio de Mensagens no WhatsApp via Selenium

Este projeto permite o envio automÃ¡tico de mensagens personalizadas para alunos via WhatsApp Web, utilizando **Python**, **Selenium** e uma planilha Excel como base de dados.

---

## âœ… Funcionalidades

* Envia mensagens diferentes para alunos **ativos** e **alunos com pagamento pendente**.
* Adiciona um **tempo aleatÃ³rio entre 5 e 30 segundos** entre os envios (para parecer mais humano).
* No final, envia uma **mensagem-resumo** para um nÃºmero especÃ­fico com o total de mensagens enviadas, nÃºmero de alunos ativos e nÃºmero de alunos pendentes.
* Reutiliza a **mesma aba do navegador**, sem abrir uma nova aba a cada mensagem.

---

## âœ… Requisitos

* **Python 3.x** instalado.
* **Google Chrome** instalado.
* **Chromedriver** compatÃ­vel com a sua versÃ£o do Chrome.

Baixe o **Chromedriver** aqui:
[https://chromedriver.chromium.org/downloads](https://chromedriver.chromium.org/downloads)

---

## âœ… InstalaÃ§Ã£o das DependÃªncias

Abra o terminal (CMD) e rode:

```bash
pip install selenium pandas openpyxl
```

---

## âœ… Estrutura de Arquivos

```
mensagem_whatsapp/
â”œâ”€â”€ whatsapp_automation.py
â”œâ”€â”€ alunos.xlsx
â””â”€â”€ README.md
```

* **whatsapp\_automation.py** â†’ CÃ³digo Python principal.
* **alunos.xlsx** â†’ Planilha com os dados dos alunos.
* **README.md** â†’ Este arquivo.

---

## âœ… Exemplo de Planilha (alunos.xlsx)

| Nome        | Telefone    | Status | Pagamento |
| ----------- | ----------- | ------ | --------- |
| JoÃ£o Silva  | 88991234567 | Ativo  | Em dia    |
| Maria Souza | 88998765432 | Ativo  | Pendente  |

* **Telefone** â†’ Sem espaÃ§os, apenas DDD + nÃºmero.
* **Status** â†’ Apenas quem estÃ¡ como "Ativo" recebe.
* **Pagamento** â†’ "Em dia" ou "Pendente"/"Atrasado".

---

## âœ… Como Usar

1. Abra o CMD na pasta do projeto:

```bash
cd C:\Users\SeuUsuario\Documents\mensagem_whatsapp
```

2. Execute o script:

```bash
python whatsapp_automation.py
```

3. O navegador abrirÃ¡ o **WhatsApp Web**.
   FaÃ§a o login escaneando o QR Code.

4. As mensagens serÃ£o enviadas uma por uma.

---

## âœ… ConfiguraÃ§Ãµes no CÃ³digo

* âœ… Tempo entre as mensagens â†’ VariÃ¡vel `TEMPO_MIN` e `TEMPO_MAX`
* âœ… NÃºmero para receber o **resumo final** â†’ Edite a variÃ¡vel `NUMERO_RESUMO`
* âœ… Caminho do Chromedriver â†’ Modifique a variÃ¡vel `CHROMEDRIVER_PATH`

---

## âœ… ObservaÃ§Ãµes Importantes

* **Mantenha o navegador aberto durante todo o envio!**
* Se quiser, altere as mensagens diretamente no cÃ³digo.
* O WhatsApp pode bloquear o envio se detectar envios suspeitos em alta quantidade.
  Mantenha um intervalo humano entre as mensagens.

---

## âœ… ContribuiÃ§Ãµes

Sinta-se Ã  vontade para abrir issues ou fazer um fork para melhorias!

---

Quer que eu inclua esse README direto no ZIP e te gere um novo link?
